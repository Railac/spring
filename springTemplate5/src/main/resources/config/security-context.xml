<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	
	<security:http>
		<security:intercept-url pattern="/top.jsp" access="permitAll()" />
		<security:intercept-url pattern="/admin/**" access="permitAll()" /><!-- access에 따라 url로들어가면 login페이지뜸 -->
		<!-- <security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" /> -->
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:form-login default-target-url="/top.jsp" /><!-- 성공적으로로그인했을떄 뜨는페이지 -->
		<security:logout logout-url="/logout" logout-success-url="/top.jsp" />
		<security:csrf disabled="true" />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="authService">
			<!-- <security:jdbc-user-service data-source-ref="dataSource"
				 users-by-username-query
				 ="select LOGIN_ID, PASSWORD, 1
				 from T_USER
				where LOGIN_ID = ?"
				 authorities-by-username-query
				 ="select LOGIN_ID, ROLE_NAME
				 from T_ROLE
				 inner join T_USER_ROLE on T_ROLE.ID = T_USER_ROLE.ROLE_ID
				 inner join T_USER on T_USER_ROLE.USER_ID = T_USER.ID
				 where LOGIN_ID = ?" /> -->
				 
			<security:password-encoder hash="bcrypt"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
