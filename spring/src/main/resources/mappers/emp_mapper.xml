<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.spring.dao.EmpMapper">
<!-- 부서별 사원 수 -부서번호, 부서명, 사원수 -->
	<select id="getStatDept" resultType="map">
		select e.department_id "dept_id", 
		       d.department_name "dept_name", 
		       count(*)  as CNT
		from employees e, departments d
		where e.department_id = d.department_id
    	group by e.department_id, d.department_name
		<!-- group by e.department_id, d.department_name -->
	</select>
<!-- update -->
	<update id="updateEmp" parameterType="emp" >
		update employees
		<set>
			<if test="firstName != null">first_name=#{firstName}</if>
		</set>
		where employee_id=#{employeeId}
	</update>
<!-- 단건조회  -->
	<select id="getEmp" parameterType="emp" resultType="emp">
		SELECT  employee_id,
				department_id,
				salary,
		        first_name,
				last_name,
				email,
				hire_date,
				job_id
		FROM employees
		WHERE employee_id = #{employeeId}
	</select>
<!-- 전체 레코드 건수 -->
	<select id="getCount" resultType="int">
		select count(*)
		FROM employees
	
	</select>
<!-- 전체조회  -->	
	<select id="getEmpList" resultType="emp">
		SELECT *
		  FROM employees
		  order by employee_id
		  <where>
		  	<if test="firstName != null and firstName !='' " >
		  		lower(first_name) like '%' || #{firstName} || '%'
		  	</if>
		  	<if test="departmentId != null and departmentId !='' ">
		  		and department_id = #{departmentId}
		  	</if>
		  	<if test="minSalary != null">
		  		<![CDATA[ AND SALARY > #{minSalary}]]>
		  	</if>
		  	<if test="maxSalary != null">
		  		<![CDATA[ AND SALARY < #{maxSalary}]]>
		  	</if>
		  </where>
		  
	</select>
<!-- 프로시저를 이용한 등록 -->
	<insert id="insertEmpProc" statementType="CALLABLE">
		{call INS_EMP(
			#{lastName},
			#{email},
			#{jobId},
			#{msg, mode=OUT, jdbcType=VARCHAR, javaType=string},
			#{employeeId, mode=OUT, jdbcType=VARCHAR, javaType=string}
			
		)}
	</insert>
<!--  사원등록    -->
	<insert id="insertEmp" parameterType="emp">
		<selectKey order="BEFORE" keyProperty="employeeId" resultType="string">
			SELECT MAX(EMPLOYEE_ID)+1
			FROM EMPLOYEES
		</selectKey>
		INSERT INTO EMPLOYEES (	employee_id, 
								first_name, 
								last_name,
								email,
								hire_date,
								job_id
								)
	 	                VALUES(
	 	               			#{employeeId},
	 	               			#{firstName},
	 	               			#{lastName},
	 	               			#{email},
	 	               			#{hireDate},
	 	               			#{jobId})
	</insert>
	<!-- 단건삭제 -->
	<delete id="deleteEmp">
		delete from employees
		where employee_id = #{employeeId}
	</delete>
	<!-- 선택삭제 -->
	<delete id="deleteMultiEmp">
		delete from employees
		where employee_id IN
		<foreach collection="list" item="id"
				open="(" close=")" separator=","> <!-- 던진 매개변수 타입의 collection이 필드명 -->
			#{id}
		</foreach>
	</delete>
	
	<!-- jobid select option-->
	<select id="jobSelect" resultType="com.company.spring.dao.Jobs">
		select job_id, job_title
		from jobs
		order by job_id
	</select>
	
	<!-- departmentId select option -->
	<select id="deptSelect" resultType="com.company.spring.dao.Departments">
		select department_id, department_name
		from departments
		order by department_id
	</select>

</mapper>
